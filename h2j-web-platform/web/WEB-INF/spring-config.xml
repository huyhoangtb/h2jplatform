<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    <!--xmlns:cache='http://www.springframework.org/schema/cache'-->
    <!--http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"-->
    <!--<cache:annotation-driven />-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>

    <!-- JPA EntityManagerFactory -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource">
        <!--persist name here-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
                  p:databasePlatform="${jpa.databasePlatform}"
                  p:showSql="${jpa.showSql}"/>
        </property>
<!--         <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
                  p:databasePlatform="${jpa.databasePlatform}"
                  p:showSql="${jpa.showSql}"/>
        </property>-->
<!--     <property name="jpaProperties">
            <value>
                hibernate.cache.use_second_level_cache = true
                hibernate.cache.region.factory_class = org.hibernate.cache.ehcache.EhCacheRegionFactory
                hibernate.cache.use_query_cache = true
                hibernate.generate_statistics = true
            </value>
        </property>-->
         <property name="jpaDialect">
        <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
        </property>         
        <property name="jpaPropertyMap">
        <props>
            <prop key="eclipselink.weaving">false</prop>
        </props>
        </property>    
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <!--
    Instruct Spring to perform declarative transaction management
    automatically on annotated classes.
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Transaction manager for  JTA  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
    PostProcessors to perform exception translation on @Repository classes (from native
    exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!--
    Activates various annotations to be detected in bean classes: Spring's
    @Required and @Autowired, as well as JSR 250's @PostConstruct,
    @PreDestroy and @Resource (if available) and JPA's @PersistenceContext
    and @PersistenceUnit (if available).
    -->
    <context:annotation-config/>
    
    <context:component-scan base-package="org.h2jeplatform.themes"/>
    <context:component-scan base-package="net.hj2eplatform.cms.controller"/>
    <context:component-scan base-package="net.hj2eplatform.controller"/>
    <context:component-scan base-package="net.quanxa.ckeditor"/>
    <context:component-scan base-package="net.hj2eplatform.security.controller"/>
    <context:component-scan base-package="net.hj2eplatform.converter"/>
    <context:component-scan base-package="net.hj2eplatform.resource.controller"/>
    <context:component-scan base-package="net.hj2eplatform.urlrewrite"/>
    <!--    
    <context:component-scan base-package="net.hj2eplatform.controller">
        <context:include-filter type="regex" expression=".*Stub.*Repository"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>-->

    <!--
    Instruct Spring to retrieve and apply @AspectJ aspects which are defined
    as beans in this context (such as the UsageLogAspect below).
    -->
    <aop:aspectj-autoproxy/>

    <!--
        Service Will automatically be transactional due to @Transactional.
        EntityManager will be auto-injected due to @PersistenceContext.
        PersistenceExceptions will be auto-translated due to @Repository.
    -->
    <!-- View scope -->
    
    <bean
        class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="net.hj2eplatform.core.component.ViewScope" />
                </entry>
            </map>
        </property>
    </bean>
    
    <!--bat dau java mail-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="bantour.vn@gmail.com" />
        <property name="password" value="nlntmttaum" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- this is a template message that we can pre-load with default state -->
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="vntravelsoft@gmail.com"/>
        <property name="subject" value="Your order"/>
    </bean>

    <!--ket thuc java mail-->
	 
    
    <bean name="generateServiceImpl" class="net.hj2eplatform.serviceimpls.GenerateServiceImpl">
        <property name="mailSender" ref="mailSender"/>
        <property name="templateMessage" ref="templateMessage"/>
    </bean>
    <bean name="userServiceImpl" class="net.hj2eplatform.serviceimpls.UserServiceImpl">

    </bean>
    <bean name="locationServiceImpl" class="net.hj2eplatform.serviceimpls.LocationServiceImpl"/>
    <bean name="organizationServiceImpl" class="net.hj2eplatform.serviceimpls.OrganizationServiceImpl"/>
    <bean name="orgPartnerServiceImpl" class="net.hj2eplatform.serviceimpls.OrgPartnerServiceImpl"/>
    <bean name="permissionServiceImpl" class="net.hj2eplatform.serviceimpls.PermissionServiceImpl"/>
    <bean name="roleServiceImpl" class="net.hj2eplatform.serviceimpls.RoleServiceImpl"/>
    <bean name="rolePermissionServiceDtoImpl" class="net.hj2eplatform.serviceimpls.RolePermissionServiceDtoImpl"/>
    <bean name="rolePermissionServiceImpl" class="net.hj2eplatform.serviceimpls.RolePermissionServiceImpl"/>
    <bean name="humanDtoServiceImpl" class="net.hj2eplatform.serviceimpls.HumanDtoServiceImpl"> 
        <property name="humanService" ref="humanServiceImpl"/>
        <property name="userService" ref="userServiceImpl"/>
    </bean>
    
    <bean name="humanServiceImpl" class="net.hj2eplatform.serviceimpls.HumanServiceImpl"/>
    <bean name="userPermissionServiceDtoImpl" class="net.hj2eplatform.serviceimpls.UserPermissionServiceDtoImpl"/>
    <bean name="resourceServiceImpl" class="net.hj2eplatform.resource.serviceimpls.ResourceServiceImpl"/>
    <bean name="log4ObjServiceImpl" class="net.hj2eplatform.serviceimpls.Log4ObjServiceImpl"/>
    <bean name="contactUsServiceImpl" class="net.hj2eplatform.serviceimpls.ContactUsServiceImpl"/>
</beans>